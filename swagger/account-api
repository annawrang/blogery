openapi: 3.0.0
info:
  title: Account Api
  description: Account Api handles the user accounts
  version: 1.0.0

paths:
  /accounts:
    post:
      summary: Create a new account
      description: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        201:
          description: 'Account created'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        400:
          description: 'Validation failed, or email is already registered'
  /accounts/login:
    post:
      summary: Login
      description: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthToken'
        403:
          description: 'Forbidden - invalid password'
        404:
          description: 'The account does not exist'

  /accounts/{accountId}:
    delete:
      summary: Delete account
      description: Delete account
      security:
        - Bearer: []
      parameters:
        - $ref: '#/components/parameters/AccountID'
      responses:
        204:
          description: 'No content - the account has been deleted'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'The requested resource can not be found'

components:
  schemas:
    Account:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
    AuthToken:
      type: object
      required:
        - accountId
        - jwtToken
      properties:
        accountId:
          type: string
          format: UUID
        jwtToken:
          type: string

  parameters:
    AccountID:
      name: accountId
      in: path
      description: Account ID
      required: true
      schema:
        type: string
        format: uuid
